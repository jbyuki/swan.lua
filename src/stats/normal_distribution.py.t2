;;; ../swan
;; exp types
DISTRIBUTION = 11,

;; variables
local DIST_TYPE = {
  ; distribution types
}

;; distribution types
UNDEFINED = 0,
NORMAL = 1,

;; variables
local create_dist_exp
local dist_methods = {}
local dist_mt = {}
dist_mt.__index = dist_methods

;; implement
function create_dist_exp(dist_type)
  local exp = {}
  exp.type = EXP_TYPE.DISTRIBUTION
  exp.args = {}
  exp.dist_type = dist_type or DIST_TYPE.UNDEFINED
  setmetatable(exp, dist_mt)
  return exp
end

;; implement
function dist_mt:__tostring()
  if self.dist_type == DIST_TYPE.UNDEFINED then
    return "undefined"
  ; print out distribution
  end
  return "undefined"
end

;; implement
function M.normal(mu, sigma)
  local exp = create_dist_exp(DIST_TYPE.NORMAL)
  exp.mu = mu
  exp.sigma = sigma
  return exp
end

;; print out distribution
elseif self.dist_type == DIST_TYPE.NORMAL then
  return "N(" .. tostring(self.mu) .. "," .. tostring(self.sigma) .. ")"

;; copy metamethods
dist_mt.__unm = sym_mt.__unm
dist_mt.__add = sym_mt.__add
dist_mt.__sub = sym_mt.__sub
dist_mt.__mul = sym_mt.__mul
