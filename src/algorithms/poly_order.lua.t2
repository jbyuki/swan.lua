;;; ../swan
;; implement
function poly_methods:multideg()
  return self.gens[#self.gens]
end

;; implement
function poly_methods:lc()
  return self.coeffs[#self.coeffs]
end

;; implement
function poly_methods:lm()
  local mono = nil
  local last_gen = self.gens[#self.gens]
  for i=1,#last_gen do
    if last_gen[i] > 0 then
      if not mono then
        mono = self.ring.vars[i]^last_gen[i]
      else
        mono = mono * self.ring.vars[i]^last_gen[i]
      end
    end
  end
  return mono or create_constant(1)
end

;; implement
function poly_methods:lt()
  local lc = self:lc()
  local lm = self:lm()
  if lc.type == EXP_TYPE.CONSTANT and lc.value == 1 then
    return lm
  else
    return lc * lm
  end
end
