:: scratch.lua
; reload
; start debugger
; playground
; testing
; test symbols
; show results
; stop debugger

;; start debugger
require"osv".launch { port = 8086 }

;; stop debugger
require"osv".stop()

;; reload
package.loaded["swan"] = nil
swan = require"swan"

;; test symbols
local a, b = swan.symbols "a b"
local eq = (a+b)^2
eq = eq:expand()
io.write(tostring(eq))

;; playground
; reload
local a, b, c = swan.symbols "a b c"
local eq1 = a+b
local eq2 = b+a
local eq3 = b+c
local eq4 = a+b
io.write(tostring(eq1 == eq2) .. "\n")
io.write(tostring(eq1 == eq3) .. "\n")
io.write(tostring(eq1 == eq4))

;; playground
; reload
local a, b, c = swan.symbols "a b c"
local eq1 = (a+b)^3
eq1 = eq1:expand():simplify()
io.write(tostring(eq1))

;; playground
local a = {1,2,3}
table.insert(a,1,0)
io.write(vim.inspect(a))

;; playground
; reload
local a, b = swan.symbols "a b"
local cubic = (a+b)^3
swan.poly(cubic, a, b)

;; playground
; reload
local a,b,c = swan.symbols "a b c"
local eq = (a+b+c)^4
eq = eq:expand():simplify()
io.write(tostring(eq))
