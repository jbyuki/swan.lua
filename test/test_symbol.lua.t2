:: test_symbol.lua
; reload
; start debugger
; stop debugger
; playground

;; reload
package.loaded["swan"] = nil
swan = require"swan"
p = function(s) io.write(tostring(s) .. "\n") end
c = swan.constant

;; start debugger
require"osv".launch { port = 8086 }

;; stop debugger
require"osv".stop()

;; playground
; reload
local Rp = swan.syms("R_p", swan.matrix_set:new(3,3))
local qw,qx,qy,qz = swan.syms("q_w q_x q_y q_z")
Rp:assign({
  {c(1)+qx^2-qy^2,c(2)*qx*qy,c(2)*qy}, {c(2)*qx*qy, qy^2-qx^2+c(1), -c(2)*qx}, {c(-2)*qy, c(2)*qx, c(1) - qx^2 - qy^2}})
-- p(r1 * (r1 + r1))

local fc, fs = swan.syms("f_c f_s")
local K = swan.syms("K", swan.matrix_set:new(3,3))
K:assign({{fc, -fs, c(0)}, {fs, fc, c(0)}, {c(0), c(0), c(1)}})

local P = swan.syms("P", swan.matrix_set:new(1,2))
P({0,0}, K * Rp)
p(P)

;; playground
; reload
local I = swan.mat.identity(2)
local I_2 = swan.syms("I_2", swan.matrix_set:new(2,2))
I_2({0,0}, I)
I_2({0,1}, I)
I_2({1,0}, I)
I_2({1,1}, I)
p(I_2)
